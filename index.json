[
{
	"uri": "https://baram204.github.io/AndroidStudy/day-0/",
	"title": "일차",
	"tags": [],
	"description": "",
	"content": " 준비날 기본 Discover what this Hugo theme is all about and the core-concepts behind it.\n"
},
{
	"uri": "https://baram204.github.io/AndroidStudy/day-1/",
	"title": "일차",
	"tags": [],
	"description": "",
	"content": " Chapter 1 Basics Discover what this Hugo theme is all about and the core-concepts behind it.\n"
},
{
	"uri": "https://baram204.github.io/AndroidStudy/day-2/",
	"title": "일차",
	"tags": [],
	"description": "",
	"content": " Chapter 1 Basics Discover what this Hugo theme is all about and the core-concepts behind it.\n"
},
{
	"uri": "https://baram204.github.io/AndroidStudy/day-3/",
	"title": "일차",
	"tags": [],
	"description": "",
	"content": " Chapter 1 Basics Discover what this Hugo theme is all about and the core-concepts behind it.\n"
},
{
	"uri": "https://baram204.github.io/AndroidStudy/themedoc/cont/pages/",
	"title": "Pages organization",
	"tags": [],
	"description": "",
	"content": " In Hugo, pages are the core of your site. Once it is configured, pages are definitely the added value to your documentation site.\nFolders Organize your site like any other Hugo project. Typically, you will have a content folder with all your pages.\ncontent ├── level-one │ ├── level-two │ │ ├── level-three │ │ │ ├── level-four │ │ │ │ ├── _index.md \u0026lt;-- /level-one/level-two/level-three/level-four │ │ │ │ ├── page-4-a.md \u0026lt;-- /level-one/level-two/level-three/level-four/page-4-a │ │ │ │ ├── page-4-b.md \u0026lt;-- /level-one/level-two/level-three/level-four/page-4-b │ │ │ │ └── page-4-c.md \u0026lt;-- /level-one/level-two/level-three/level-four/page-4-c │ │ │ ├── _index.md \u0026lt;-- /level-one/level-two/level-three │ │ │ ├── page-3-a.md \u0026lt;-- /level-one/level-two/level-three/page-3-a │ │ │ ├── page-3-b.md \u0026lt;-- /level-one/level-two/level-three/page-3-b │ │ │ └── page-3-c.md \u0026lt;-- /level-one/level-two/level-three/page-3-c │ │ ├── _index.md \u0026lt;-- /level-one/level-two │ │ ├── page-2-a.md \u0026lt;-- /level-one/level-two/page-2-a │ │ ├── page-2-b.md \u0026lt;-- /level-one/level-two/page-2-b │ │ └── page-2-c.md \u0026lt;-- /level-one/level-two/page-2-c │ ├── _index.md \u0026lt;-- /level-one │ ├── page-1-a.md \u0026lt;-- /level-one/page-1-a │ ├── page-1-b.md \u0026lt;-- /level-one/page-1-b │ └── page-1-c.md \u0026lt;-- /level-one/page-1-c ├── _index.md \u0026lt;-- / └── page-top.md \u0026lt;-- /page-top  _index.md is required in each folder, it’s your “folder home page”\n\rTypes Hugo-theme-learn defines two types of pages. Default and Chapter. Both can be used at any level of the documentation, the only difference being layout display.\nA Chapter displays a page meant to be used as introduction for a set of child pages. Commonly, it contains a simple title and a catch line to define content that can be found under it. You can define any HTML as prefix for the menu. In the example below, it\u0026rsquo;s just a number but that could be an icon.\n+++ title = \u0026quot;Basics\u0026quot; chapter = true weight = 5 pre = \u0026quot;\u0026lt;b\u0026gt;1. \u0026lt;/b\u0026gt;\u0026quot; +++ ### Chapter 1 # Basics Discover what this Hugo theme is all about and the core-concepts behind it.  To tell Hugo-theme-learn to consider a page as a chapter, set chapter=true in the Front Matter of the page.\nA Default page is any other content page.\n+++ title = \u0026quot;Installation\u0026quot; weight = 15 +++  The following steps are here to help you initialize your new website. If you don\u0026rsquo;t know Hugo at all, we strongly suggest you to train by following this great documentation for beginners.\nCreate your project Hugo provides a new command to create a new website.\nhugo new site \u0026lt;new_project\u0026gt;  Hugo-theme-learn provides archetypes to help you create this kind of pages.\nFront Matter configuration Each Hugo page has to define a Front Matter in yaml, toml or json.\nHugo-theme-learn uses the following parameters on top of Hugo ones :\n+++ # Table of content (toc) is enabled by default. Set this parameter to true to disable it. # Note: Toc is always disabled for chapter pages disableToc = \u0026quot;false\u0026quot; # If set, this will be used for the page's menu entry (instead of the `title` attribute) menuTitle = \u0026quot;\u0026quot; # The title of the page in menu will be prefixed by this HTML content pre = \u0026quot;\u0026quot; # The title of the page in menu will be postfixed by this HTML content post = \u0026quot;\u0026quot; # Set the page as a chapter, changing the way it's displayed chapter = false # Hide a menu entry by setting this to true hidden = false # Display name of this page modifier. If set, it will be displayed in the footer. LastModifierDisplayName = \u0026quot;\u0026quot; # Email of this page modifier. If set with LastModifierDisplayName, it will be displayed in the footer LastModifierEmail = \u0026quot;\u0026quot; +++  Add icon to a menu entry In the page frontmatter, add a pre param to insert any HTML code before the menu label. The example below uses the Github icon.\n+++ title = \u0026quot;Github repo\u0026quot; pre = \u0026quot;\u0026lt;i class='fa fa-github'\u0026gt;\u0026lt;/i\u0026gt; \u0026quot; +++  Ordering sibling menu/page entries Hugo provides a flexible way to handle order for your pages.\nThe simplest way is to set weight parameter to a number.\n+++ title = \u0026quot;My page\u0026quot; weight = 5 +++  Using a custom title for menu entries By default, Hugo-theme-learn will use a page\u0026rsquo;s title attribute for the menu item (or linkTitle if defined).\nBut a page\u0026rsquo;s title has to be descriptive on its own while the menu is a hierarchy.\nWe\u0026rsquo;ve added the menuTitle parameter for that purpose:\nFor example (for a page named content/install/linux.md):\n+++ title = \u0026quot;Install on Linux\u0026quot; menuTitle = \u0026quot;Linux\u0026quot; +++  Homepage To configure your home page, you basically have three choices:\n Create an _index.md document in content folder and fill the file with Markdown content Create an index.html file in the static folder and fill the file with HTML content Configure your server to automatically redirect home page to one your documentation page  "
},
{
	"uri": "https://baram204.github.io/AndroidStudy/day-6/03_src/01_manifest/",
	"title": "AndroidManifests.xml",
	"tags": [],
	"description": "",
	"content": " 소스 파일들 AndroidManifests.xml ? Manifest 는 보통 외부의 다른 것과 상호작용하는 방식을 기술하는 명세서라고 볼 수 있다.\n구체적으로, 안드로이드 시스템과 앱이 상호작용할 수 있도록 앱의 필수 정보를 시스템에 제공한다.\nhttps://developer.android.com/guide/topics/manifest/manifest-intro.html?hl=ko#filestruct\n분석 \u0026lt;manifest\u0026gt; 및 \u0026lt;application\u0026gt; 요소만 필수입니다.\nManifest 요소 \u0026lt;?xml version=\u0026quot;1.0\u0026quot; encoding=\u0026quot;utf-8\u0026quot;?\u0026gt; \u0026lt;manifest xmlns:android=\u0026quot;http://schemas.android.com/apk/res/android\u0026quot; package=\u0026quot;com.siot.inicissample\u0026quot; android:versionCode=\u0026quot;1\u0026quot; android:versionName=\u0026quot;1.0\u0026quot; \u0026gt;   com.siot.inicissample은 manifest 파일 내에서 참조하는 모든 클래스들의 상대 경로가 된다. 아래 \u0026lt;application android:name=\u0026quot;.MainActivity\u0026quot;면 com.siot.inicissample.MainActivity 다. 기본 프로세스가 된다.  \u0026lt;application android:name=\u0026quot; 혹은 \u0026lt;service android:name=\u0026quot; 처럼 서브 클래스 지정하지 않으면 이게 프로세스에서 돌아간다.   버전 코드나 이름.. 이거 gradle 에서 오버라이드 할 수 있고..\n여튼 안드로이드 시스템은 이 앱을 읽게되면, com.siot.inicissample 을 베이스로 알아 먹는다.\nhttps://developer.android.com/guide/topics/manifest/manifest-element.html?hl=ko\nuser-sdk \u0026lt;uses-sdk android:minSdkVersion=\u0026quot;8\u0026quot; android:targetSdkVersion=\u0026quot;21\u0026quot; /\u0026gt;  이것도 gradle 설정 볼 때 본 변수. 최소 버전을 만족시키지 못하는 안드로이드 시스템에는 설치를 막는다.\n타겟은 테스팅이 된 버전을 적는다. 이거보다 높은 버전이면 추가 기능이 활성화되지 않게 막는다.\nmaxSdkVersion 도 있는데\u0026hellip; 이것도 이 버전 이상이면 설치 막는 것.\n레퍼런스에서는 하위호환 되도록 새 버전을 출시하므로 max 는 사용하지 말 것을 권고한다.\nhttps://developer.android.com/guide/topics/manifest/uses-sdk-element.html?hl=ko\nuses-permission 애플리케이션이 올바르게 작동하기 위해 안드로이드 시스템으로부터 부여받아야 하는 권한을 요청한다.\nandroid 로 시작하는 건, 시스템에 미리 정의된 권한이기 때문이다.\n\u0026lt;uses-permission android:name=\u0026quot;android.permission.INTERNET\u0026quot; /\u0026gt;  인터넷 권한의 경우 네트워크 소켓을 열 수 있게 허용해준다.\n즉 네트워크 소켓을 열고 안드로이드 시스템을 통해서 외부와 통신할 수 있게 해준단 말이다.\n 인터넷 권한 시스템 권한 목록 유저퍼미션  application 요소는 모든 컴포넌트에 영향을 미칠 수 있는 속성을 가지고 있고 어플리케이션의 컴포넌트를 각각 정의하는 서브엘리먼트를 포함하는 엘리먼트다.\n\u0026lt;application android:allowBackup=\u0026quot;true\u0026quot; android:icon=\u0026quot;@drawable/ic_launcher\u0026quot; android:label=\u0026quot;@string/app_name\u0026quot; android:theme=\u0026quot;@style/AppTheme\u0026quot; \u0026gt;  https://developer.android.com/guide/topics/manifest/application-element.html?hl=ko#aff\n액티비티 시각적 사용자 인터페이스 요소를 구현하는 액티비티 클래스 선언. 모든 액티비티는 선언되어야 함. 여기에 선언되지 않는다면 안드로이드 시스템이 표시하지 않고 실행도 안 된다.\n\u0026lt;activity android:name=\u0026quot;.MainActivity\u0026quot; android:label=\u0026quot;@string/app_name\u0026quot; \u0026gt; \u0026lt;!-- 사용될 액티비티(화면 \u0026amp; DB 컨트롤) 이름과 라벨 설정 --\u0026gt;  액티비티를 구현하는 서브 클래스 이름, 패키지+클래스 여야 하는데 매니패스트에 패키지 적어 놓은 경우에 .클래스명으로 표시할 수 있다.\nhttps://developer.android.com/guide/topics/manifest/activity-element.html?hl=ko#aff\n인텐트 필터 (엔트리 포인트가 되는) 액티비티, 서비스, 혹은 브로드캐스트 리시버가 반응할 수 있는 (호출 요청의) 인텐트 타입을 지정한다. 인텐트 필터는 그것의 부모 컴포넌트의 능력을 선언한다. - 액티비티와 서비스가 무엇을 할 수 있는지, 어떤 브로드캐스트 리시버를 다룰 수 있는지. 컴포넌트에게 의미없는 것들을 걸러내면서, 광고된 타입의 인텐트를 수신하는 컴포넌트를 연다.\n\u0026lt;intent-filter\u0026gt; \u0026lt;action android:name=\u0026quot;android.intent.action.MAIN\u0026quot; /\u0026gt; \u0026lt;category android:name=\u0026quot;android.intent.category.LAUNCHER\u0026quot; /\u0026gt; \u0026lt;/intent-filter\u0026gt;  표준 액티비티 행동이 있다.\n xml에서 : android.intent.action.MAIN 액티비티 내에서 : Intent.Action_MAIN   Action_MAIN 메인 엔트리 포인트 역할을 맡긴다. 안드로이드 시스템이 실행 엔트리 포인트를 찾고 있다면, 인텐트 필터로, \u0026ldquo;여기가 엔트리 포인트야, 이 액티비티를 실행해\u0026rdquo;라고 알려주는 것이다.\nCATEGORY_LAUNCHER 탑레벨 런처에서 이 액티비티가 보연다.\n https://developer.android.com/guide/topics/manifest/intent-filter-element.html?hl=ko\n엔트리 포인트 - 추가적인 액션 웹브라우저에서 \u0026ldquo;importtest://\u0026rdquo; 스킴을 가진 링크가 클릭될 때 MainActivity 가 안전하게 호출될 수 있고, 이것이 묵시적인 인텐트로 호출될 수 있음을 선언한다.\n\u0026lt;intent-filter\u0026gt; \u0026lt;action android:name=\u0026quot;android.intent.action.VIEW\u0026quot; /\u0026gt; \u0026lt;category android:name=\u0026quot;android.intent.category.DEFAULT\u0026quot; /\u0026gt; \u0026lt;category android:name=\u0026quot;android.intent.category.BROWSABLE\u0026quot; /\u0026gt; \u0026lt;data android:scheme=\u0026quot;iamporttest\u0026quot; /\u0026gt; \u0026lt;/intent-filter\u0026gt; \u0026lt;/activity\u0026gt;   ACTION_VIEW 데이터를 사용자에게 보여준다. 이것은 자료에 대해 수행되는 가장 공통적인 액션이다. 이것은 어떤 자료의 조각이 가장 합리적으로 일어나야 하는 일을 일어나게 하는데 사용할 수 있다. 예를 들면, conatact 엔트리는 엔트리를 보여줄 것이고, mailto: 는 해당 URI 가 채워진 작성 윈도우를 가져올 것이다. tel: 은 다이얼러를 호출할 것이고\nCATEGORY_DEFAULT Context.startActivity() 와 startActivityForResult() 에 의해서 발견되기 위해서 매우 자주 필요하다. 묵시적 인텐트 호출 시, 즉 거꾸로 말하면 안드로이스 시스템이 앱으로 묵시적 인텐트를 날릴 때 카테고리가 기본이어야 묵시적 인텐트를 수신할 수 있다. 다른 아무 카테고리가 없어도, default 로 선언되면 실행이 가능하다.\n https://stackoverflow.com/questions/5727828/what-is-the-purpose-of-android-intent-category-default\n CATEGORY_BROWSABL 액티비티가 브라우저로부터 안전하게 호출되게 하려면 반드시 필요한 카테고리다. 예를 들자면, 사용자가 사용자가 웹페이지나 이메일을 보는 도중에 문자열에 있는 링크를 클릭한다면, 그 링크를 생성한 인텐트는 BROWSABLE 카테고리를 필요로 한다. 그러므로, 이 카테고리를 지원하는 액티비티만이 가능한 액션으로 고려될 것이다. 이 카테고리를 지원함으로써, 당신은 사용자의 개입 없이 아무 손상 없이 맞는 인텐트 호출이 일어날 거라 약속할 수 있다.\n  \u0026lt;data\u0026gt; 는 인텐트 필터에 구체적인 데이터를 지정한다. mimeType, URI, type 과 URI 둘 다\u0026hellip;  scheme 지정이 안 되면 모든 다른 URI 속성이 무시된다. 최소한 하나라도 정의가 되어 있어야 한다. host 지정이 안 되면 port 속성과 다른 경로 속성이 무시된다.   https://developer.android.com/guide/topics/manifest/data-element.html?hl=ko\n예시\n ACTION_VIEW content://contacts/people/1 -- Display information about the person whose identifier is \u0026quot;1\u0026quot;. ACTION_VIEW tel:123 -- Display the phone dialer with the given number filled in. Note how the VIEW action does what is considered the most reasonable thing for a particular URI. ACTION_VIEW content://contacts/people/ -- Display a list of people, which the user can browse through. This example is a typical top-level entry into the Contacts application, showing you the list of people. Selecting a particular person to view would result in a new intent { ACTION_VIEW content://contacts/people/N } being used to start an activity to display that person.  서브 액티비티를 만들어서 처리하는 방법 위에서는 메인 액티비티가 실행되고, 웹브라우저에서 특정 스킴 클릭 시 메인 액티비티에서 인텐트 수신이 되도록 했지만. 아래는 별도의 액티비티가 실행되도록 하는 설정이다.\n\u0026lt;!-- \u0026lt;activity android:name=\u0026quot;.SubActivity\u0026quot; android:label=\u0026quot;@string/app_name\u0026quot; \u0026gt; \u0026lt;intent-filter\u0026gt; \u0026lt;action android:name=\u0026quot;android.intent.action.VIEW\u0026quot; /\u0026gt; \u0026lt;category android:name=\u0026quot;android.intent.category.DEFAULT\u0026quot; /\u0026gt; \u0026lt;category android:name=\u0026quot;android.intent.category.BROWSABLE\u0026quot; /\u0026gt; \u0026lt;data android:scheme=\u0026quot;iamporttest\u0026quot; /\u0026gt; \u0026lt;/intent-filter\u0026gt; \u0026lt;/activity\u0026gt; --\u0026gt; \u0026lt;/application\u0026gt; \u0026lt;/manifest\u0026gt;  "
},
{
	"uri": "https://baram204.github.io/AndroidStudy/themedoc/basics/",
	"title": "Basics",
	"tags": [],
	"description": "",
	"content": " Chapter 1 Basics Discover what this Hugo theme is all about and the core-concepts behind it.\n"
},
{
	"uri": "https://baram204.github.io/AndroidStudy/day-6/01_structure/",
	"title": "구조분석",
	"tags": [],
	"description": "",
	"content": " 구조분석 기본 내용 안드로이드 관점  manifests  AndroidManifest.xml 파일을 포함합니다.  java  JUnit 테스트 코드를 비롯한 Java 소스 코드 파일을 포함합니다. 이들 파일은 패키지 이름별로 구분됩니다.  res  코드가 아닌 모든 리소스(예: XML 레이아웃, UI 문자열, 비트맵 이미지 등)를 포함합니다. 이들 리소스는 해당 하위 디렉토리로 나뉩니다. 가능한 모든 리소스 유형에 대한 자세한 내용은 리소스 제공을 참조하세요.   구체적인 소스는 소스 분석에서 할 예정\n더 자세히 https://developer.android.com/studio/projects/index.html?hl=ko#ProjectFiles\n\r그래들 설정  MyApp 이라는 프로젝트 상위 설정은 하위 폴더 설정에 영향을 미친다.  app 이라는 하위 폴더에 정의한 설정은 상위 설정을 기본으로 포함한다.   더 자세히 https://developer.android.com/studio/build/index.html?hl=ko\n\r"
},
{
	"uri": "https://baram204.github.io/AndroidStudy/day-4/",
	"title": "일차",
	"tags": [],
	"description": "",
	"content": " Chapter 1 Basics Discover what this Hugo theme is all about and the core-concepts behind it.\n"
},
{
	"uri": "https://baram204.github.io/AndroidStudy/day-5/",
	"title": "일차",
	"tags": [],
	"description": "",
	"content": " 5 일차 Gradle https://medium.com/@goinhacker/%EC%9A%B4%EC%98%81-%EC%9E%90%EB%8F%99%ED%99%94-1-%EB%B9%8C%EB%93%9C-%EC%9E%90%EB%8F%99%ED%99%94-by-gradle-7630c0993d09\n웹에서 안드로이드 앱 실행 커스텀 URL 스키마로 안드로이드 액티비티 실행하기 AAA.class 라는 액티비티 실행하려면\nIntent intent = new Intent(this,AAA.class); startActivity(intent);  그럼 특정 Uri 를 통해서 인텐트를 실행하려면\nString url =\u0026quot;http://gun0912.tistory.com\u0026quot;; Intent intent = new Intent(Intent.ACTION_VIEW, Uri.parse(url)); startActivity(intent);  https://medium.com/@gun0912/android-start-activity-by-custom-url-scheme-eada62fdf9eb\n웹뷰 http://g-y-e-o-m.tistory.com/28\n"
},
{
	"uri": "https://baram204.github.io/AndroidStudy/day-6/",
	"title": "일차",
	"tags": [],
	"description": "",
	"content": " 여섯째날 아이엠포트 소스 분석 아이엠포트 소스를 분석해봅니다.\n"
},
{
	"uri": "https://baram204.github.io/AndroidStudy/day-7/",
	"title": "일차",
	"tags": [],
	"description": "",
	"content": " 일곱째날 Basics Discover what this Hugo theme is all about and the core-concepts behind it.\n"
},
{
	"uri": "https://baram204.github.io/AndroidStudy/themedoc/cont/archetypes/",
	"title": "Archetypes",
	"tags": [],
	"description": "",
	"content": " Using the command: hugo new [relative new content path], you can start a content file with the date and title automatically set. While this is a welcome feature, active writers need more : archetypes.\nIt is pre-configured skeleton pages with default front matter. Please refer to the documentation for types of page to understand the differences.\nChapter To create a Chapter page, run the following commands\nhugo new --kind chapter \u0026lt;name\u0026gt;/_index.md  It will create a page with predefined Front-Matter:\n+++ title = \u0026quot;{{ replace .TranslationBaseName \u0026quot;-\u0026quot; \u0026quot; \u0026quot; | title }}\u0026quot; date = {{ .Date }} weight = 5 chapter = true pre = \u0026quot;\u0026lt;b\u0026gt;X. \u0026lt;/b\u0026gt;\u0026quot; +++ ### Chapter X # Some Chapter title Lorem Ipsum.  Default To create a default page, run either one of the following commands\n# Either hugo new \u0026lt;chapter\u0026gt;/\u0026lt;name\u0026gt;/_index.md # Or hugo new \u0026lt;chapter\u0026gt;/\u0026lt;name\u0026gt;.md  It will create a page with predefined Front-Matter:\n+++ title = \u0026quot;{{ replace .TranslationBaseName \u0026quot;-\u0026quot; \u0026quot; \u0026quot; | title }}\u0026quot; date = {{ .Date }} weight = 5 +++ Lorem Ipsum.  "
},
{
	"uri": "https://baram204.github.io/AndroidStudy/themedoc/cont/",
	"title": "Content",
	"tags": [],
	"description": "",
	"content": " Chapter 2 Content Find out how to create and organize your content quickly and intuitively.\n"
},
{
	"uri": "https://baram204.github.io/AndroidStudy/day-6/02_gradle/",
	"title": "Gradle 설정",
	"tags": [],
	"description": "",
	"content": " Gradle 설정 실제 구조 C:. │ build.gradle │ settings.gradle ├─app │ │ build.gradle │ └─src └─gradle └─wrapper  buid.gradle 탑 폴더에서 정의된 빌드 설정이기 때문에 모든 하위 폴더에 적용되는 내용이다. 즉 모든 하위프로젝트에서 공통으로 사용될 내용을 기술해 놓는 용도다.\n// Top-level build file where you can add configuration options common to all sub-projects/modules. buildscript { /** * Gradle 리포지토리와 종속성을 정의하기 위해 buildscript {} 블록을 사용한다. * 빌드 라이브러리들을 검색하거나 다운로드할 때 사용될 저장소들을 정의한다. * Gradle pre-configures support for remote * repositories such as JCenter, Maven Central, and Ivy. You can also use local * repositories or define your own remote repositories. * 아래 코드는 해당 의존성을 찾을 때 jcenter 와 google 저장소를 찾아야 한다는 * 의존성을 설정하는 것 */ repositories { jcenter() google() } /** * 프로젝트 빌드 시 gradle 이 필요로 하는 의존성을 정의한다. * 아래는 gradle 3.1.0 을 classpath 의존성으로 정해놓는다. */ dependencies { classpath 'com.android.tools.build:gradle:3.1.0' } } /** * 프로젝트 내부의 모든 모듈에게 사용될 의존성을 정의한다. 예를 들자면 3rd 플러그인.. * 모든 모듈이 아니라 특정 하위 모듈이 사용할 의존성은 여기에 기술하지 않는다. * 아래는 저장소만 기술하고 의존성은 기술하지 않았다. */ allprojects { repositories { jcenter() } }  settings.gradle 빌드 시 포함될 앱(폴더명)\n// 즉, 여기에 적히지 않은 폴더는 빌드시 제외된다는 말. include ':app'  구체적으로 app 폴더 내부의 설정을 알아보자.\napp 폴더 하위의 build.Gradle /** * 아래의 anroid{} 블록의 빌드와 작성을 가능하게 하는 플러그인을 정의한다. */ apply plugin: 'com.android.application' /** * 모든 안드로이드 특정 설정이 담기는 곳이다. * android 말고 java, scala, groovy 등의 설정이 담기는 곳도 존재할 수 있다는 말인듯. */ android { /** * 컴파일 시 사용할 SDK 버전과, 그래들이 빌드할 때 사용할 SDK 버전 정의 */ compileSdkVersion 21 buildToolsVersion \u0026quot;26.0.0\u0026quot; /** * 기본 설정 블록은,모든 빌드 기본 설정을 캡슐화 하고 모든 빌드 변수들을 등재한다. * 그러면, main/AndroidManifest.xml 의 몇몇 속성을 동적으로 대체 할 수 있다. * 다른 버전의 앱을 위해서 제품 기호에 맞게 아래의 값들을 변경할 수 있다. */ defaultConfig { /** * 배포를 위한 유일한 ID 를 정의한다. * 그런데 main/AndroidManifest.xml 에서 정의한 패키지명을 * 소스에서 참조할 수 있다. applicationId \u0026quot;com.siot.inicissample\u0026quot; // 앱을 실행하기 위한 최소 API minSdkVersion 8 // 앱을 테스트하는데 사용될 API 레벨 targetSdkVersion 21 // 버전 넘버 // versionCode 1 // 사용자 친화적인 버전 넘버 // versionName \u0026quot;1.0\u0026quot; } /** * 다중 빌드 타입을 설정할 수 있다. * 기본 : debug 와 release. * 디버그 빌드는 기본 빌드 설정 내부에서 명시적으로 보이지 않지만 디버그 도구와 * 디버그 키로 사인되어 있다. * 릴리즈는 프로카드 설정파일을 지정하며 기본적으로 사인되어 있지 않다. */ buildTypes { release { minifyEnabled false // 릴리즈 빌드 타입에서는 코드를 축소시키지 않는다. proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt' } } /** * The productFlavors {} 다중 제품 선호를 설정할 수 있다. 제품 별로 defaultConfig{} * 블록의 설정을 대체할 수 있음. 이것은 기본이 아니다. * 아래는 free 와 paid 에 따른 어플리케이션 ID 를 지정해 준 것이다. */ /* productFlavors { free { applicationId 'com.example.myapp.free' } paid { applicationId 'com.example.myapp.paid' } */ /** * The splits {} block is where you can configure different APK builds that * each contain only code and resources for a supported screen density or * ABI. You'll also need to configure your build so that each APK has a * different versionCode. */ /* splits { // Screen density split settings density { // Enable or disable the density split mechanism enable false // Exclude these densities from splits exclude \u0026quot;ldpi\u0026quot;, \u0026quot;tvdpi\u0026quot;, \u0026quot;xxxhdpi\u0026quot;, \u0026quot;400dpi\u0026quot;, \u0026quot;560dpi\u0026quot; } } */ } /** * 의존성 블록은 모듈 레벨의 빌드 설정 파일이며, 모듈 자신을 빌드할 때 요구되는 * 의존성만 지정한다. */ dependencies { compile 'com.android.support:support-v4:21.0.3' compile 'com.android.support:appcompat-v7:21.0.3' }  Gradle 속성 파일  gradle.properties  이 위치에서는 프로젝트 범위의 Gradle 설정을 구성할 수 있습니다(예: Gradle 데몬의 최대 힙 크기). 자세한 내용은 빌드 환경을 참조하세요.  local.properties  빌드 시스템의 로컬 환경 속성을 구성합니다(예: SDK 설치의 경로). 이 파일의 내용은 Android Studio에 의해 자동으로 생성되고 로컬 개발자 환경에만 해당하므로, 이 파일을 직접 수정하거나 버전 제어 시스템에 체크인해서는 안됩니다.   "
},
{
	"uri": "https://baram204.github.io/AndroidStudy/themedoc/basics/requirements/",
	"title": "Requirements",
	"tags": [],
	"description": "",
	"content": "Thanks to the simplicity of Hugo, this page is as empty as this theme needs requirements.\nJust download latest version of Hugo binary (\u0026gt; 0.25) for your OS (Windows, Linux, Mac) : it\u0026rsquo;s that simple.\n"
},
{
	"uri": "https://baram204.github.io/AndroidStudy/day-6/03_src/02_iamportsdk/",
	"title": "아이엠포트SDK",
	"tags": [],
	"description": "",
	"content": " 소스 파일들 아이엠포트 SDK 아이엠포트에서 안드로이드용으로 개발할 때 쓰라고 만들어둔 개발 키트.\nhttps://github.com/iamport/iamport-inicis-graddle\n대충 실행과정  아이엠포트 관리자 페이지에서 PG사 지정 후 저장. 안드로이드 웹뷰를 통해서 아임포트를 실행한다.  인텐트에 import 라는 스킴 설정 결제 완료 후 리다이렉트 될 곳 설정  웹뷰에서 각 카드사 등의 ISP 앱연결을 위한 네이티브 코드 작성  WebViewClient.shouldOverrideUrlLoading() 으로 특정 url 스킴에 따라 각각의 앱 실행(intent)  외부 앱으로 이동할 경우 이용 후 다시 원래 주소로 리다이렉트 되도록 네이티브 코드 처리  onNewIntent 메소드 오버라이딩 해서, 새 인텐트 생성시 담고 있는 스킴주소를 웹뷰에 로드하도록 함.  결제 완료되면 웹뷰가 리다이렉트되며 성공한 결제 정보가 쿼리 스트링으로 전달된다.  m_redirect_url : \u0026lsquo;https://www.yourdomain.com/payments/complete' 실제 이동 : https://www.yourdomain.com/payments/complete? imp_uid=imp_12345678\u0026amp;merchant_uid=oid_987654321\u0026amp;imp_success=true http://www.iamport.kr/getstarted API 로 실제 주문금액과 일치하는지 최종 검증을 한다. https://api.iamport.kr/   분석 InicisWebViewClient // 웹뷰 클라이언트 서브클래싱(상속 혹은 확장) public class InicisWebViewClient extends WebViewClient { // 빈 액티비티 변수 선언 private Activity activity; // 클래스 생성자 - 액티비티를 받아서 내부 변수에 할당 public InicisWebViewClient(Activity activity) { this.activity = activity; }  여기까지는 뭐\u0026hellip; 통상의 웹뷰 클라이언트의 작동이 아닌 우리가 원하는 작동을 하는 웹뷰 클라이언트가 필요하기 때문에 상속하고 오버라이딩 하는 거.\nhttps://developer.android.com/reference/android/webkit/WebViewClient.html\n@Override public boolean shouldOverrideUrlLoading(WebView view, String url) {  현재 웹뷰에 새로운 url 이 막 불러와질 때 호스트 어플리케이션에게 컨트롤을 빼앗아 올 수 있는 기회를 준다. 웹뷰 클라이언트가 제공되지 않으면, 기본적으로 웹뷰가 액티비티 매니저에게 해당 url 에 적절한 핸들러를 선택하도록 요청한다. 웹뷰 클라이언트가 제공되면, true 면 호스트 어플리케이션이 url 을 다루고, false 면 현재 웹뷰가 url 을 다룬다. POST 메소드를 사용한 리퀘스트에는 이 메소드가 호출될 수 없다.\nhttps://developer.android.com/reference/android/webkit/WebViewClient.html#shouldOverrideUrlLoading(android.webkit.WebView,%20java.lang.String) 레벨 24부터 디프리케이티드 됐다고\u0026hellip; 쩝. string 대신에 웹리소스리퀘스트 사용하게 한다.\n// 만약 불러와질 url 이 // http:// 혹은 https:// 혹은 javascript:// 로 시작하지 않는다면 if (!url.startsWith(\u0026quot;http://\u0026quot;) \u0026amp;\u0026amp; !url.startsWith(\u0026quot;https://\u0026quot;) \u0026amp;\u0026amp; !url.startsWith(\u0026quot;javascript:\u0026quot;)) { // 인텐트 변수를 생성하고 비워버린다. Intent intent = null; try { // 웹 관련 url 를 파싱해서 인텐트를 생성한다. // Intent.URI_INTENT_SCHEME 는 처리 플래그인데 결과가 `intent:`를 포함하게 한다. // 안그럼 그냥 raw Uri 로 처리되면 VIEW 액션이 실행됨. intent = Intent.parseUri(url, Intent.URI_INTENT_SCHEME); //IntentURI처리 // 인코딩된 문자열 URI 를 얻어온다. // 'intent:~~~' Uri uri = Uri.parse(intent.getDataString()); // 엉? 기껏 만들어 놓은 인텐트에서 uri 만 뽑고 버리네? ㅡㅡ;; // ACTION_VIEW 로 uri 를 실행하는 인텐트를 만들어서 해당 액티비티를 시작(호출)한다. activity.startActivity(new Intent(Intent.ACTION_VIEW, uri)); // 웹뷰가 아닌, 액티비티를 호스트로 시작했으므로, 이 호스트 어플리케이션(액티비티)가 웹뷰 대신 해당 페이지를 컨트롤 한다. return true; // URI 구문 오류가 있다면 (어차피 아무 액티비티도 실행 안 되니까) 걍 웹뷰가 해당 페이지를 컨트롤 하게 둔다. } catch (URISyntaxException ex) { return false;   parseURI uri toUri(int)로 반환되었다면, 이 Uri 로부터 인텐트를 생성. URI 는 액션, 카테고리 그리고 다른 인텐트 필드를 인코드 할 수 있다. 만약 인텐트가 toUri() 로 생성되지 않았다면, 인텐트의 자료는 풀 URI 가 될 것이고 액션은 ACTION_VIEW 가 될 것이다. https://developer.android.com/reference/android/content/Intent.html?hl=ko#parseUri(java.lang.String,%20int)\nURI_INTENT_SCHEME URI 가 언제나 \u0026ldquo;intent:\u0026rdquo; 스킴을 포함하도록 한다. 인텐트와 raw URI 를 구분하기 위해서 사용하며, raw URI 의 경우는 일반 VIEW 액션으로 실행이 된다.\nURI(통합 자원 식별자) URL 은 http://로 시작하는 경우만 해당하고, URI 는 더 상위의 개념이다. Web-oriented architecture (웹 기반의 구조문법)kakaotalk://sendmsg?text=hello! facebookmsg://like?url=mysite.com` 각각의 프로토콜을 해석할 수 있는 프로그램이 URI 를 핸들링한다.\n // URI 구문은 잘 맞았는데 해당하는 액티비티가 (안드로이드 시스템 상에)없을 때... } catch (ActivityNotFoundException e) { // 인텐트 내부에 담긴 게 없을 때는 뭐.. 웹뷰가 해당 페이지 로드하게 하고.. if ( intent == null ) return false; // 인텐트 있고, 인텐트에서 URI 도 뽑아냈는데 현재 휴대폰에 설치된 액티비티가 없다면 // 결제스킴없음담당자에게 스킴을 찾아서 해당 스킴에 맞는 앱페이지로 마켓을 인텐트로 호출한 후 // true 를 반환한다. // ISP 나 BANKPAY 인지 확인하고 맞으면 마켓 이동. if ( handleNotFoundPaymentScheme(intent.getScheme()) ) return true; // 인텐트도 있는데 액티비티가 없어서 찾아봤더니 우리가 가진 목록에 마켓이 패키지 정보가 없을 때는 // 직업 패키지 정보를 추출한다음에 String packageName = intent.getPackage(); if (packageName != null) { // 해당 패키지 설치 마켓 실행 activity.startActivity(new Intent(Intent.ACTION_VIEW, Uri.parse(\u0026quot;market://details?id=\u0026quot; + packageName))); // 그럼 ISP 앱도 다 설치됐으니 호스트 어플리케이션에서 해당 웹 페이지 컨트롤 빼앗음. // 그래야 결제 후 원하는 url 을 강제로 불러올 것 아니야. return true; } // 패키키지 이름마저 없다면 포기. return false; } } // 인텐트 뽑고 패키지 찾아서 마켓 이동하고 별지랄 다 해도 안 되면 그냥 포기 return false; }  try catch 부분을 보면\u0026hellip; handleNotFoundPaymentScheme 호출을 하는데..\njdk 1.8 부터 람다나 고차함수가 가능하지만, .. 고차함수라기 보다는 메소드 참조가 System.out::println 요런 형태를 써야 가능하다고 함.\n여튼, 마켓에 가서 설치를 시켜놓고 백버튼 누르면 다시 들어오면, 호스트가 웹뷰의 해당 주소를 컨트롤하는 상태로 된다.\n다른 소스를 보면 이렇게 컨트롤을 뺐어온 다음에 redirect 를 강제로 시켜벌임. 음\u0026hellip; 아직 정확히는 모르겠다.\n/** * @param scheme * @return 해당 scheme에 대해 처리를 직접 하는지 여부 * * 결제를 위한 3rd-party 앱이 아직 설치되어있지 않아 ActivityNotFoundException이 발생하는 경우 처리합니다. * 여기서 handler되지않은 scheme에 대해서는 intent로부터 Package정보 추출이 가능하다면 다음에서 packageName으로 market이동합니다. * */ protected boolean handleNotFoundPaymentScheme(String scheme) { //PG사에서 호출하는 url에 package정보가 없어 ActivityNotFoundException이 난 후 market 실행이 안되는 경우 // ISP 모바일 상수와 글자 하나씩 비교하는 string 메서드를 사용해서 같은지 다른지 검증 if ( PaymentScheme.ISP.equalsIgnoreCase(scheme) ) { // 맞으면 마켓 이동 activity.startActivity(new Intent(Intent.ACTION_VIEW, Uri.parse(\u0026quot;market://details?id=\u0026quot; + PaymentScheme.PACKAGE_ISP))); // 컨트롤 으라고 if 통과시키게 하기 return true; // 뱅크페이도 검사 } else if ( PaymentScheme.BANKPAY.equalsIgnoreCase(scheme) ) { activity.startActivity(new Intent(Intent.ACTION_VIEW, Uri.parse(\u0026quot;market://details?id=\u0026quot; + PaymentScheme.PACKAGE_BANKPAY))); return true; } // ISP 랑 뱅크페이 아니면 false.. return false; } }  왜 ISP 랑 뱅크페이만 체크할까?\nPaymentScheme public class PaymentScheme { public final static String ISP = \u0026quot;ispmobile\u0026quot;; public final static String BANKPAY = \u0026quot;kftc-bankpay\u0026quot;; public final static String HYUNDAI_APPCARD = \u0026quot;hdcardappcardansimclick\u0026quot;; //intent:hdcardappcardansimclick://appcard?acctid=201605092050048514902797477441#Intent;package=com.hyundaicard.appcard;end; public final static String KB_APPCARD = \u0026quot;kb-acp\u0026quot;; //intent://pay?srCode=5681318\u0026amp;kb-acp://#Intent;scheme=kb-acp;package=com.kbcard.cxh.appcard;end; public final static String PACKAGE_ISP = \u0026quot;kvp.jjy.MispAndroid320\u0026quot;; public final static String PACKAGE_BANKPAY = \u0026quot;com.kftc.bankpay.android\u0026quot;; }  "
},
{
	"uri": "https://baram204.github.io/AndroidStudy/themedoc/cont/markdown/",
	"title": "Markdown syntax",
	"tags": [],
	"description": "",
	"content": " This page is a shameful copy of the great Grav original page. Only difference is information about image customization (resizing, add CSS classes\u0026hellip;)\n\rLet\u0026rsquo;s face it: Writing content for the Web is tiresome. WYSIWYG editors help alleviate this task, but they generally result in horrible code, or worse yet, ugly web pages.\nMarkdown is a better way to write HTML, without all the complexities and ugliness that usually accompanies it.\nSome of the key benefits are:\n Markdown is simple to learn, with minimal extra characters so it\u0026rsquo;s also quicker to write content. Less chance of errors when writing in markdown. Produces valid XHTML output. Keeps the content and the visual display separate, so you cannot mess up the look of your site. Write in any text editor or Markdown application you like. Markdown is a joy to use!  John Gruber, the author of Markdown, puts it like this:\n The overriding design goal for Markdown’s formatting syntax is to make it as readable as possible. The idea is that a Markdown-formatted document should be publishable as-is, as plain text, without looking like it’s been marked up with tags or formatting instructions. While Markdown’s syntax has been influenced by several existing text-to-HTML filters, the single biggest source of inspiration for Markdown’s syntax is the format of plain text email. \u0026ndash; John Gruber\n Grav ships with built-in support for Markdown and Markdown Extra. You must enable Markdown Extra in your system.yaml configuration file\nWithout further delay, let us go over the main elements of Markdown and what the resulting HTML looks like:\n Bookmark this page for easy future reference!\n\rHeadings Headings from h1 through h6 are constructed with a # for each level:\n# h1 Heading ## h2 Heading ### h3 Heading #### h4 Heading ##### h5 Heading ###### h6 Heading  Renders to:\nh1 Heading h2 Heading h3 Heading h4 Heading h5 Heading h6 Heading HTML:\n\u0026lt;h1\u0026gt;h1 Heading\u0026lt;/h1\u0026gt; \u0026lt;h2\u0026gt;h2 Heading\u0026lt;/h2\u0026gt; \u0026lt;h3\u0026gt;h3 Heading\u0026lt;/h3\u0026gt; \u0026lt;h4\u0026gt;h4 Heading\u0026lt;/h4\u0026gt; \u0026lt;h5\u0026gt;h5 Heading\u0026lt;/h5\u0026gt; \u0026lt;h6\u0026gt;h6 Heading\u0026lt;/h6\u0026gt;  Comments Comments should be HTML compatible\n\u0026lt;!-- This is a comment --\u0026gt;  Comment below should NOT be seen:\nHorizontal Rules The HTML \u0026lt;hr\u0026gt; element is for creating a \u0026ldquo;thematic break\u0026rdquo; between paragraph-level elements. In markdown, you can create a \u0026lt;hr\u0026gt; with any of the following:\n ___: three consecutive underscores ---: three consecutive dashes ***: three consecutive asterisks  renders to:\nBody Copy Body copy written as normal, plain text will be wrapped with \u0026lt;p\u0026gt;\u0026lt;/p\u0026gt; tags in the rendered HTML.\nSo this body copy:\nLorem ipsum dolor sit amet, graecis denique ei vel, at duo primis mandamus. Et legere ocurreret pri, animal tacimates complectitur ad cum. Cu eum inermis inimicus efficiendi. Labore officiis his ex, soluta officiis concludaturque ei qui, vide sensibus vim ad.  renders to this HTML:\n\u0026lt;p\u0026gt;Lorem ipsum dolor sit amet, graecis denique ei vel, at duo primis mandamus. Et legere ocurreret pri, animal tacimates complectitur ad cum. Cu eum inermis inimicus efficiendi. Labore officiis his ex, soluta officiis concludaturque ei qui, vide sensibus vim ad.\u0026lt;/p\u0026gt;  Emphasis Bold For emphasizing a snippet of text with a heavier font-weight.\nThe following snippet of text is rendered as bold text.\n**rendered as bold text**  renders to:\nrendered as bold text\nand this HTML\n\u0026lt;strong\u0026gt;rendered as bold text\u0026lt;/strong\u0026gt;  Italics For emphasizing a snippet of text with italics.\nThe following snippet of text is rendered as italicized text.\n_rendered as italicized text_  renders to:\nrendered as italicized text\nand this HTML:\n\u0026lt;em\u0026gt;rendered as italicized text\u0026lt;/em\u0026gt;  strikethrough In GFM (GitHub flavored Markdown) you can do strikethroughs.\n~~Strike through this text.~~  Which renders to:\nStrike through this text.\nHTML:\n\u0026lt;del\u0026gt;Strike through this text.\u0026lt;/del\u0026gt;  Blockquotes For quoting blocks of content from another source within your document.\nAdd \u0026gt; before any text you want to quote.\n\u0026gt; **Fusion Drive** combines a hard drive with a flash storage (solid-state drive) and presents it as a single logical volume with the space of both drives combined.  Renders to:\n Fusion Drive combines a hard drive with a flash storage (solid-state drive) and presents it as a single logical volume with the space of both drives combined.\n and this HTML:\n\u0026lt;blockquote\u0026gt; \u0026lt;p\u0026gt;\u0026lt;strong\u0026gt;Fusion Drive\u0026lt;/strong\u0026gt; combines a hard drive with a flash storage (solid-state drive) and presents it as a single logical volume with the space of both drives combined.\u0026lt;/p\u0026gt; \u0026lt;/blockquote\u0026gt;  Blockquotes can also be nested:\n\u0026gt; Donec massa lacus, ultricies a ullamcorper in, fermentum sed augue. Nunc augue augue, aliquam non hendrerit ac, commodo vel nisi. \u0026gt;\u0026gt; Sed adipiscing elit vitae augue consectetur a gravida nunc vehicula. Donec auctor odio non est accumsan facilisis. Aliquam id turpis in dolor tincidunt mollis ac eu diam.  Renders to:\n Donec massa lacus, ultricies a ullamcorper in, fermentum sed augue. Nunc augue augue, aliquam non hendrerit ac, commodo vel nisi. \u0026gt; Sed adipiscing elit vitae augue consectetur a gravida nunc vehicula. Donec auctor odio non est accumsan facilisis. Aliquam id turpis in dolor tincidunt mollis ac eu diam.\n Notices The old mechanism for notices overriding the block quote syntax (\u0026gt;\u0026gt;\u0026gt;) has been deprecated. Notices are now handled via a dedicated plugin called Markdown Notices\n\rLists Unordered A list of items in which the order of the items does not explicitly matter.\nYou may use any of the following symbols to denote bullets for each list item:\n* valid bullet - valid bullet + valid bullet  For example\n+ Lorem ipsum dolor sit amet + Consectetur adipiscing elit + Integer molestie lorem at massa + Facilisis in pretium nisl aliquet + Nulla volutpat aliquam velit - Phasellus iaculis neque - Purus sodales ultricies - Vestibulum laoreet porttitor sem - Ac tristique libero volutpat at + Faucibus porta lacus fringilla vel + Aenean sit amet erat nunc + Eget porttitor lorem  Renders to:\n Lorem ipsum dolor sit amet Consectetur adipiscing elit Integer molestie lorem at massa Facilisis in pretium nisl aliquet Nulla volutpat aliquam velit  Phasellus iaculis neque Purus sodales ultricies Vestibulum laoreet porttitor sem Ac tristique libero volutpat at  Faucibus porta lacus fringilla vel Aenean sit amet erat nunc Eget porttitor lorem  And this HTML\n\u0026lt;ul\u0026gt; \u0026lt;li\u0026gt;Lorem ipsum dolor sit amet\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Consectetur adipiscing elit\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Integer molestie lorem at massa\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Facilisis in pretium nisl aliquet\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Nulla volutpat aliquam velit \u0026lt;ul\u0026gt; \u0026lt;li\u0026gt;Phasellus iaculis neque\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Purus sodales ultricies\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Vestibulum laoreet porttitor sem\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Ac tristique libero volutpat at\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Faucibus porta lacus fringilla vel\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Aenean sit amet erat nunc\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Eget porttitor lorem\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt;  Ordered A list of items in which the order of items does explicitly matter.\n1. Lorem ipsum dolor sit amet 2. Consectetur adipiscing elit 3. Integer molestie lorem at massa 4. Facilisis in pretium nisl aliquet 5. Nulla volutpat aliquam velit 6. Faucibus porta lacus fringilla vel 7. Aenean sit amet erat nunc 8. Eget porttitor lorem  Renders to:\n Lorem ipsum dolor sit amet Consectetur adipiscing elit Integer molestie lorem at massa Facilisis in pretium nisl aliquet Nulla volutpat aliquam velit Faucibus porta lacus fringilla vel Aenean sit amet erat nunc Eget porttitor lorem  And this HTML:\n\u0026lt;ol\u0026gt; \u0026lt;li\u0026gt;Lorem ipsum dolor sit amet\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Consectetur adipiscing elit\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Integer molestie lorem at massa\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Facilisis in pretium nisl aliquet\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Nulla volutpat aliquam velit\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Faucibus porta lacus fringilla vel\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Aenean sit amet erat nunc\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Eget porttitor lorem\u0026lt;/li\u0026gt; \u0026lt;/ol\u0026gt;  TIP: If you just use 1. for each number, Markdown will automatically number each item. For example:\n1. Lorem ipsum dolor sit amet 1. Consectetur adipiscing elit 1. Integer molestie lorem at massa 1. Facilisis in pretium nisl aliquet 1. Nulla volutpat aliquam velit 1. Faucibus porta lacus fringilla vel 1. Aenean sit amet erat nunc 1. Eget porttitor lorem  Renders to:\n Lorem ipsum dolor sit amet Consectetur adipiscing elit Integer molestie lorem at massa Facilisis in pretium nisl aliquet Nulla volutpat aliquam velit Faucibus porta lacus fringilla vel Aenean sit amet erat nunc Eget porttitor lorem  Code Inline code Wrap inline snippets of code with `.\nIn this example, `\u0026lt;section\u0026gt;\u0026lt;/section\u0026gt;` should be wrapped as **code**.  Renders to:\nIn this example, \u0026lt;section\u0026gt;\u0026lt;/section\u0026gt; should be wrapped with code.\nHTML:\n\u0026lt;p\u0026gt;In this example, \u0026lt;code\u0026gt;\u0026amp;lt;section\u0026amp;gt;\u0026amp;lt;/section\u0026amp;gt;\u0026lt;/code\u0026gt; should be wrapped with \u0026lt;strong\u0026gt;code\u0026lt;/strong\u0026gt;.\u0026lt;/p\u0026gt;  Indented code Or indent several lines of code by at least four spaces, as in:\n // Some comments line 1 of code line 2 of code line 3 of code  Renders to:\n// Some comments line 1 of code line 2 of code line 3 of code  HTML:\n\u0026lt;pre\u0026gt; \u0026lt;code\u0026gt; // Some comments line 1 of code line 2 of code line 3 of code \u0026lt;/code\u0026gt; \u0026lt;/pre\u0026gt;  Block code \u0026ldquo;fences\u0026rdquo; Use \u0026ldquo;fences\u0026rdquo; ``` to block in multiple lines of code.\n ``` markup Sample text here... ```  Sample text here...  HTML:\n\u0026lt;pre\u0026gt; \u0026lt;code\u0026gt;Sample text here...\u0026lt;/code\u0026gt; \u0026lt;/pre\u0026gt;  Syntax highlighting GFM, or \u0026ldquo;GitHub Flavored Markdown\u0026rdquo; also supports syntax highlighting. To activate it, simply add the file extension of the language you want to use directly after the first code \u0026ldquo;fence\u0026rdquo;, `js, and syntax highlighting will automatically be applied in the rendered HTML. For example, to apply syntax highlighting to JavaScript code:\n ```js grunt.initConfig({ assemble: { options: { assets: 'docs/assets', data: 'src/data/*.{json,yml}', helpers: 'src/custom-helpers.js', partials: ['src/partials/**/*.{hbs,md}'] }, pages: { options: { layout: 'default.hbs' }, files: { './': ['src/templates/pages/index.hbs'] } } } }; ```  Renders to:\ngrunt.initConfig({ assemble: { options: { assets: 'docs/assets', data: 'src/data/*.{json,yml}', helpers: 'src/custom-helpers.js', partials: ['src/partials/**/*.{hbs,md}'] }, pages: { options: { layout: 'default.hbs' }, files: { './': ['src/templates/pages/index.hbs'] } } } };  Tables Tables are created by adding pipes as dividers between each cell, and by adding a line of dashes (also separated by bars) beneath the header. Note that the pipes do not need to be vertically aligned.\n| Option | Description | | ------ | ----------- | | data | path to data files to supply the data that will be passed into templates. | | engine | engine to be used for processing templates. Handlebars is the default. | | ext | extension to be used for dest files. |  Renders to:\n   Option Description     data path to data files to supply the data that will be passed into templates.   engine engine to be used for processing templates. Handlebars is the default.   ext extension to be used for dest files.    And this HTML:\n\u0026lt;table\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;th\u0026gt;Option\u0026lt;/th\u0026gt; \u0026lt;th\u0026gt;Description\u0026lt;/th\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt;data\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;path to data files to supply the data that will be passed into templates.\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt;engine\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;engine to be used for processing templates. Handlebars is the default.\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt;ext\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;extension to be used for dest files.\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;/table\u0026gt;  Right aligned text Adding a colon on the right side of the dashes below any heading will right align text for that column.\n| Option | Description | | ------:| -----------:| | data | path to data files to supply the data that will be passed into templates. | | engine | engine to be used for processing templates. Handlebars is the default. | | ext | extension to be used for dest files. |     Option Description     data path to data files to supply the data that will be passed into templates.   engine engine to be used for processing templates. Handlebars is the default.   ext extension to be used for dest files.    Links Basic link [Assemble](http://assemble.io)  Renders to (hover over the link, there is no tooltip):\nAssemble\nHTML:\n\u0026lt;a href=\u0026quot;http://assemble.io\u0026quot;\u0026gt;Assemble\u0026lt;/a\u0026gt;  Add a title [Upstage](https://github.com/upstage/ \u0026quot;Visit Upstage!\u0026quot;)  Renders to (hover over the link, there should be a tooltip):\nUpstage\nHTML:\n\u0026lt;a href=\u0026quot;https://github.com/upstage/\u0026quot; title=\u0026quot;Visit Upstage!\u0026quot;\u0026gt;Upstage\u0026lt;/a\u0026gt;  Named Anchors Named anchors enable you to jump to the specified anchor point on the same page. For example, each of these chapters:\n# Table of Contents * [Chapter 1](#chapter-1) * [Chapter 2](#chapter-2) * [Chapter 3](#chapter-3)  will jump to these sections:\n## Chapter 1 \u0026lt;a id=\u0026quot;chapter-1\u0026quot;\u0026gt;\u0026lt;/a\u0026gt; Content for chapter one. ## Chapter 2 \u0026lt;a id=\u0026quot;chapter-2\u0026quot;\u0026gt;\u0026lt;/a\u0026gt; Content for chapter one. ## Chapter 3 \u0026lt;a id=\u0026quot;chapter-3\u0026quot;\u0026gt;\u0026lt;/a\u0026gt; Content for chapter one.  NOTE that specific placement of the anchor tag seems to be arbitrary. They are placed inline here since it seems to be unobtrusive, and it works.\nImages Images have a similar syntax to links but include a preceding exclamation point.\n![Minion](http://octodex.github.com/images/minion.png)  or\n![Alt text](http://octodex.github.com/images/stormtroopocat.jpg \u0026quot;The Stormtroopocat\u0026quot;)  Like links, Images also have a footnote style syntax\nAlternative usage : note images ![Alt text][id]  With a reference later in the document defining the URL location:\n[id]: http://octodex.github.com/images/dojocat.jpg \u0026quot;The Dojocat\u0026quot;  Resizing image Add HTTP parameters width and/or height to the link image to resize the image. Values are CSS values (default is auto).\n![Minion](http://octodex.github.com/images/minion.png?width=20pc)  ![Minion](http://octodex.github.com/images/minion.png?height=50px)  ![Minion](http://octodex.github.com/images/minion.png?height=50px\u0026amp;width=300px)  Add CSS classes Add a HTTP classes parameter to the link image to add CSS classes. shadowand border are available but you could define other ones.\n![stormtroopocat](http://octodex.github.com/images/stormtroopocat.jpg?classes=shadow)  ![stormtroopocat](http://octodex.github.com/images/stormtroopocat.jpg?classes=border)  ![stormtroopocat](http://octodex.github.com/images/stormtroopocat.jpg?classes=border,shadow)  "
},
{
	"uri": "https://baram204.github.io/AndroidStudy/themedoc/shortcodes/",
	"title": "Shortcodes",
	"tags": [],
	"description": "",
	"content": "Hugo uses Markdown for its simple content format. However, there are a lot of things that Markdown doesn’t support well. You could use pure HTML to expand possibilities.\nBut this happens to be a bad idea. Everyone uses Markdown because it\u0026rsquo;s pure and simple to read even non-rendered. You should avoid HTML to keep it as simple as possible.\nTo avoid this limitations, Hugo created shortcodes. A shortcode is a simple snippet inside a page.\nHugo-theme-learn provides multiple shortcodes on top of existing ones.\n\rAttachments\r\rThe Attachments shortcode displays a list of files attached to a page.\n\rButton\r\rNice buttons on your page.\n\rChildren\r\rList the child pages of a page\n\rExpand\r\rDisplays an expandable/collapsible section of text on your page\n\rMermaid\r\rGeneration of diagram and flowchart from text in a similar manner as markdown\n\rNotice\r\rDisclaimers to help you structure your page\n\rSite param\r\rGet value of site params variables in your page.\n\r"
},
{
	"uri": "https://baram204.github.io/AndroidStudy/themedoc/basics/installation/",
	"title": "Installation",
	"tags": [],
	"description": "",
	"content": " The following steps are here to help you initialize your new website. If you don\u0026rsquo;t know Hugo at all, we strongly suggest you to train by following this great documentation for beginners.\nCreate your project Hugo provides a new command to create a new website.\nhugo new site \u0026lt;new_project\u0026gt;  Install the theme Install the Hugo-theme-learn theme by following this documentation\nThe theme\u0026rsquo;s repository is: https://github.com/matcornic/hugo-theme-learn.git\nAlternatively, you can download the theme as .zip file and extract it in the themes directory\nBasic configuration When building the website, you can set a theme by using --theme option. We suggest you to edit your configuration file and set the theme by default. By the way, add requirements for search functionnality to be enabled.\n# Change the default theme to be use when building the site with Hugo theme = \u0026quot;hugo-theme-learn\u0026quot; # For search functionnality [outputs] home = [ \u0026quot;HTML\u0026quot;, \u0026quot;RSS\u0026quot;, \u0026quot;JSON\u0026quot;]  Create your first chapter page Chapters are pages containg other child pages. It has a special layout style and usually just contains a chapter name, the title and a brief abstract of the section.\n### Chapter 1 # Basics Discover what this Hugo theme is all about and the core-concepts behind it.  renders as\nHugo-theme-learn provides archetypes to create skeletons for your website. Begin by creating your first chapter page with the following command\nhugo new --kind chapter basics/_index.md  By opening the given file, you should see the property chapter=true on top, meaning this page is a chapter.\nBy default all chapters and pages are created as draft. If you want to render these pages, remove the property draft: true from the metadata.\nCreate your first content pages Then, create content pages inside the previous chapter. Here are two ways to create content in the chapter :\nhugo new basics/first-content.md hugo new basics/second-content/_index.md  Feel free to edit thoses files by adding some sample content and replacing title value in the beginning of the files.\nLaunching the website locally Launch the following command:\nhugo serve  Go to http://localhost:1313\nYou should notice three things:\n You have a left Basics menu, containing two submenus with names equals to title properties in previously created files. The home page explains you to how to customize it. Follow the instructions. With hugo serve command, the page refresh as soon as you save a file. Neat !  Build the website When your site is ready to deploy, launch the following command:\nhugo  A public folder has been generated, containing all statics content and assets for your website. It can now be deployed on any web server !\nThis website can be automatically published and hosted with Netlify (Read more about Automated HUGO deployments with Netlify). Alternatively, you can use Github pages\n\r"
},
{
	"uri": "https://baram204.github.io/AndroidStudy/day-6/03_src/",
	"title": "소스파일",
	"tags": [],
	"description": "",
	"content": " 소스파일들 구조 src └─main │ AndroidManifest.xml │ ├─java │ └─com │ └─siot │ ├─iamportsdk │ │ InicisWebViewClient.java │ │ PaymentScheme.java │ │ │ └─inicissample │ MainActivity.java │ SubActivity.java │ └─res ├─drawable-hdpi │ ic_launcher.png │ ├─drawable-mdpi │ ic_launcher.png │ ├─drawable-xhdpi │ ic_launcher.png │ ├─drawable-xxhdpi │ ic_launcher.png │ ├─layout │ activity_main.xml │ ├─values │ strings.xml │ styles.xml │ ├─values-v11 │ styles.xml │ └─values-v14 styles.xml  "
},
{
	"uri": "https://baram204.github.io/AndroidStudy/day-6/03_src/03_inicis_sample/",
	"title": "이니시스 샘플",
	"tags": [],
	"description": "",
	"content": " 소스 파일들 이니시스 샘플 아이엠포트 SDK 와 웹뷰 사용해서 결제 데모 시연 페이지\nhttps://github.com/iamport/iamport-inicis-graddle\n분석 InicisWebViewClient public class MainActivity extends Activity { // 웹뷰 변수 생성 // 앱 스킴을 \u0026quot;importtest://\u0026quot;로 설정 private WebView mainWebView; private static final String APP_SCHEME = \u0026quot;iamporttest://\u0026quot;;  액티비티 서브 클래싱\n@SuppressLint(\u0026quot;NewApi\u0026quot;) @Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); // 메인 뷰 호출 setContentView(R.layout.activity_main);  @SuppressLint(\u0026ldquo;NewApi\u0026rdquo;)\n옛 버전(minSdkVersion) 이후의 새 버전의 API 메소드를 호출할 경우.\n오작동이나 크래시가 날 수도 있으니. 경고를 보내는데 이 린트 경고를 무시한다.\n// xml 레이아웃에서 웹뷰 컴포넌트 가져오기. mainWebView = (WebView) findViewById(R.id.mainWebView); // 웹 클라이언트 지정 mainWebView.setWebViewClient(new InicisWebViewClient(this));   WebView 기본적으로 보여주기만 한다.\n Uri uri = Uri.parse(\u0026quot;https://www.example.com\u0026quot;); Intent intent = new Intent(Intent.ACTION_VIEW, uri); startActivity(intent);  https://developer.android.com/reference/android/webkit/WebView.html\n// 웹뷰를 컨트롤 하기위해 사되는 웹셋팅 객체 가져온다. WebSettings settings = mainWebView.getSettings(); // 이 설정객체에 웹뷰에서 자바스크립트 허용설정. settings.setJavaScriptEnabled(true);  https://developer.android.com/reference/android/webkit/WebViewClient.html\n// 빌드 SDK 버전이 롤리팝 이상이면 if (android.os.Build.VERSION.SDK_INT \u0026gt;= Build.VERSION_CODES.LOLLIPOP) { // http https 섞인 컨텐츠 모드 항상 허용 설정. settings.setMixedContentMode(WebSettings.MIXED_CONTENT_ALWAYS_ALLOW); // 또한 쿠키 긴으도 허용. CookieManager cookieManager = CookieManager.getInstance(); cookieManager.setAcceptCookie(true); cookieManager.setAcceptThirdPartyCookies(mainWebView, true); }   setMixedContentMode Configures the WebVie` behavior when a secure origin attempts to load a resource from an insecure origin. By default, apps that target KITKAT or below default to MIXED_CONTENT_ALWAYS_ALLOW. Apps targeting LOLLIPOP default to MIXED_CONTENT_NEVER_ALLOW. The preferred and most secure mode of operation for the WebView is MIXED_CONTENT_NEVER_ALLOW and use of MIXED_CONTENT_ALWAYS_ALLOW is strongly discouraged.\n PG 사 결제화면 및 카드사 인증화면간 여러 번 http, https 리다이렉션 되는 과정에서 웹뷰 설정을 해줘야 한다고 함.\nhttps://developer.android.com/reference/android/webkit/WebSettings.html\n setAcceptThirdPartyCookies Sets whether the WebView should allow third party cookies to be set. Allowing third party cookies is a per WebView policy and can be set differently on different WebView instances.\n Apps that target KITKAT or below default to allowing third party cookies. Apps targeting LOLLIPOP or later default to disallowing third party cookies.\n그리고 카드사 인증 단계에서 쿠기기능 활용하는게 필요하다고.. 요것도 롤리팝 이상부터 허용 설정이 필요함.\nhttps://developer.android.com/reference/android/webkit/CookieManager.html\n// getIntent 는 Acrivity 메서드. // 인텐트를 가져온다.(있으면) Intent intent = getIntent(); // 인텐트 자료를 가져와서 Uri 객체에 담는다. Uri intentData = intent.getData(); // 인텐트 데이터가 없을 경우... // 처음 실행이 되었고 다른 앱에서 인텐트를 넘기지 않았을 경우에 if ( intentData == null ) { // 웹뷰가 아이엠포트를 로드하게 한다. mainWebView.loadUrl(\u0026quot;http://www.iamport.kr/demo\u0026quot;); // mainWebView.loadUrl(\u0026quot;http://192.168.0.77:8888\u0026quot;); } else { // 그게 아니라면.. 그니까 다른 곳에서 다시 메인 액티비티를 호출했을 때. //isp 인증 후 복귀했을 때 결제 후속조치 String url = intentData.toString(); // importtest:// 스킴으로 시작하는지 검사해서 if ( url.startsWith(APP_SCHEME) ) { // 거기로 리다이렉트 시켜버린다. String redirectURL = url.substring(APP_SCHEME.length()+3); mainWebView.loadUrl(redirectURL); } } }  @Override protected void onNewIntent(Intent intent) { // 액티비티의 인스턴스가 시작될 때, 인텐트 url 받아와서 String url = intent.getDataString(); // importtest:// 스킴으로 시작되는지 검사해서 if ( url.startsWith(APP_SCHEME) ) { // 리다이렉트 시켜버린다. String redirectURL = url.substring(APP_SCHEME.length()+3); mainWebView.loadUrl(redirectURL); } } }   onNewIntent This is called for activities that set launchMode to \u0026ldquo;singleTop\u0026rdquo; in their package, or if a client used the FLAG_ACTIVITY_SINGLE_TOP flag when calling startActivity(Intent). In either case, when the activity is re-launched while at the top of the activity stack instead of a new instance of the activity being started, onNewIntent() will be called on the existing instance with the Intent that was used to re-launch it.\n An activity will always be paused before receiving a new intent, so you can count on onResume() being called after this method.\nhttps://developer.android.com/reference/android/app/Activity.html#onNewIntent(android.content.Intent)\n"
},
{
	"uri": "https://baram204.github.io/AndroidStudy/themedoc/basics/configuration/",
	"title": "Configuration",
	"tags": [],
	"description": "",
	"content": " Global site parameters On top of Hugo global configuration, Hugo-theme-learn lets you define the following parameters in your config.toml (here, values are default).\nNote that some of these parameters are explained in details in other sections of this documentation.\n[params] # Prefix URL to edit current page. Will display an \u0026quot;Edit this page\u0026quot; button on top right hand corner of every page. # Useful to give opportunity to people to create merge request for your doc. # See the config.toml file from this documentation site to have an example. editURL = \u0026quot;\u0026quot; # Author of the site, will be used in meta information author = \u0026quot;\u0026quot; # Description of the site, will be used in meta information description = \u0026quot;\u0026quot; # Shows a checkmark for visited pages on the menu showVisitedLinks = false # Disable search function. It will hide search bar disableSearch = false # Javascript and CSS cache are automatically busted when new version of site is generated. # Set this to true to disable this behavior (some proxies don't handle well this optimization) disableAssetsBusting = false # Set this to true to disable copy-to-clipboard button for inline code. disableInlineCopyToClipBoard = false # A title for shortcuts in menu is set by default. Set this to true to disable it. disableShortcutsTitle = false # When using mulitlingual website, disable the switch language button. disableLanguageSwitchingButton = false # Order sections in menu by \u0026quot;weight\u0026quot; or \u0026quot;title\u0026quot;. Default to \u0026quot;weight\u0026quot; ordersectionsby = \u0026quot;weight\u0026quot; # Change default color scheme with a variant one. Can be \u0026quot;red\u0026quot;, \u0026quot;blue\u0026quot;, \u0026quot;green\u0026quot;. themeVariant = \u0026quot;\u0026quot;  Activate search If not already present, add the follow lines in the same config.toml file.\n[outputs] home = [ \u0026quot;HTML\u0026quot;, \u0026quot;RSS\u0026quot;, \u0026quot;JSON\u0026quot;]  Learn theme uses the last improvement available in hugo version 20+ to generate a json index file ready to be consumed by lunr.js javascript search engine.\n Hugo generate lunrjs index.json at the root of public folder. When you build the site with hugo server, hugo generates it internally and of course it doesn’t show up in the filesystem\n "
},
{
	"uri": "https://baram204.github.io/AndroidStudy/themedoc/",
	"title": "테마문서",
	"tags": [],
	"description": "",
	"content": " 2 테마 사용문서 테마 사용 문서 Discover what this Hugo theme is all about and the core-concepts behind it.\n"
},
{
	"uri": "https://baram204.github.io/AndroidStudy/themedoc/cont/menushortcuts/",
	"title": "Menu extra shortcuts",
	"tags": [],
	"description": "",
	"content": " You can define additional menu entries or shortcuts in the navigation menu without any link to content.\nBasic configuration Edit the website configuration config.toml and add a [[menu.shortcuts]] entry for each link your want to add.\nExample from the current website:\n[[menu.shortcuts]] name = \u0026quot;\u0026lt;i class='fa fa-github'\u0026gt;\u0026lt;/i\u0026gt; Github repo\u0026quot; identifier = \u0026quot;ds\u0026quot; url = \u0026quot;https://github.com/matcornic/hugo-theme-learn\u0026quot; weight = 10 [[menu.shortcuts]] name = \u0026quot;\u0026lt;i class='fa fa-camera'\u0026gt;\u0026lt;/i\u0026gt; Showcases\u0026quot; url = \u0026quot;/showcase\u0026quot; weight = 11 [[menu.shortcuts]] name = \u0026quot;\u0026lt;i class='fa fa-bookmark'\u0026gt;\u0026lt;/i\u0026gt; Hugo Documentation\u0026quot; identifier = \u0026quot;hugodoc\u0026quot; url = \u0026quot;https://gohugo.io/\u0026quot; weight = 20 [[menu.shortcuts]] name = \u0026quot;\u0026lt;i class='fa fa-bullhorn'\u0026gt;\u0026lt;/i\u0026gt; Credits\u0026quot; url = \u0026quot;/credits\u0026quot; weight = 30  By default, shortcuts are preceded by a title. This title can be disabled by setting disableShortcutsTitle=true. However, if you want to keep the title but change its value, it can be overriden by changing your local i18n translation string configuration.\nFor example, in your local i18n/en.toml file, add the following content\n[Shortcuts-Title] other = \u0026quot;\u0026lt;Your value\u0026gt;\u0026quot;  Read more about hugo menu and hugo i18n translation strings\nConfiguration for Multilingual mode When using a multilingual website, you can set different menus for each language. In the config.toml file, prefix your menu configuration by Languages.\u0026lt;language-id\u0026gt;.\nExample from the current website:\n[Languages] [Languages.en] title = \u0026quot;Documentation for Hugo Learn Theme\u0026quot; weight = 1 languageName = \u0026quot;English\u0026quot; [[Languages.en.menu.shortcuts]] name = \u0026quot;\u0026lt;i class='fa fa-github'\u0026gt;\u0026lt;/i\u0026gt; Github repo\u0026quot; identifier = \u0026quot;ds\u0026quot; url = \u0026quot;https://github.com/matcornic/hugo-theme-learn\u0026quot; weight = 10 [[Languages.en.menu.shortcuts]] name = \u0026quot;\u0026lt;i class='fa fa-camera'\u0026gt;\u0026lt;/i\u0026gt; Showcases\u0026quot; url = \u0026quot;/showcase\u0026quot; weight = 11 [[Languages.en.menu.shortcuts]] name = \u0026quot;\u0026lt;i class='fa fa-bookmark'\u0026gt;\u0026lt;/i\u0026gt; Hugo Documentation\u0026quot; identifier = \u0026quot;hugodoc\u0026quot; url = \u0026quot;https://gohugo.io/\u0026quot; weight = 20 [[Languages.en.menu.shortcuts]] name = \u0026quot;\u0026lt;i class='fa fa-bullhorn'\u0026gt;\u0026lt;/i\u0026gt; Credits\u0026quot; url = \u0026quot;/credits\u0026quot; weight = 30 [Languages.fr] title = \u0026quot;Documentation du thème Hugo Learn\u0026quot; weight = 2 languageName = \u0026quot;Français\u0026quot; [[Languages.fr.menu.shortcuts]] name = \u0026quot;\u0026lt;i class='fa fa-github'\u0026gt;\u0026lt;/i\u0026gt; Repo Github\u0026quot; identifier = \u0026quot;ds\u0026quot; url = \u0026quot;https://github.com/matcornic/hugo-theme-learn\u0026quot; weight = 10 [[Languages.fr.menu.shortcuts]] name = \u0026quot;\u0026lt;i class='fa fa-camera'\u0026gt;\u0026lt;/i\u0026gt; Vitrine\u0026quot; url = \u0026quot;/showcase\u0026quot; weight = 11 [[Languages.fr.menu.shortcuts]] name = \u0026quot;\u0026lt;i class='fa fa-bookmark'\u0026gt;\u0026lt;/i\u0026gt; Documentation Hugo\u0026quot; identifier = \u0026quot;hugodoc\u0026quot; url = \u0026quot;https://gohugo.io/\u0026quot; weight = 20 [[Languages.fr.menu.shortcuts]] name = \u0026quot;\u0026lt;i class='fa fa-bullhorn'\u0026gt;\u0026lt;/i\u0026gt; Crédits\u0026quot; url = \u0026quot;/credits\u0026quot; weight = 30  Read more about hugo menu and hugo multilingual menus\n"
},
{
	"uri": "https://baram204.github.io/AndroidStudy/themedoc/basics/style-customization/",
	"title": "Style customization",
	"tags": [],
	"description": "",
	"content": " Hugo-theme-learn has been built to be as configurable as possible by defining multiple partials\nIn themes/hugo-theme-learn/layouts/partials/, you will find all the partials defined for this theme. If you need to overwrite something, don\u0026rsquo;t change the code directly. Instead follow this page. You\u0026rsquo;d create a new partial in the layouts/partials folder of your local project. This partial will have the priority.\nThis theme defines the following partials :\n header: the header of the content page (contains the breadcrumbs). Not meant to be overwritten custom-header: custom headers in page. Meant to be overwritten when adding CSS imports. Don\u0026rsquo;t forget to include style HTML tag directive in your file footer: the footer of the content page (contains the arrows). Not meant to be overwritten custom-footer: custom footer in page. Meant to be overwritten when adding Javacript. Don\u0026rsquo;t forget to include javascript HTML tag directive in your file favicon: the favicon logo: the logo, on top left hand corner. meta: HTML meta tags, if you want to change default behavior menu: left menu. Not meant to be overwritten menu-footer: footer of the the left menu search: search box toc: table of contents  Change the logo Create a new file in layouts/partials/ named logo.html. Then write any HTML you want. You could use an img HTML tag and reference an image created under the static folder, or you could paste a SVG definition !\nThe size of the logo will adapt automatically\n\rChange the favicon If your favicon is a png, just drop off your image in your local static/images/ folder and names it favicon.png\nIf you need to change this default behavior, create a new file in layouts/partials/ named favicon.html. Then write something like this:\n\u0026lt;link rel=\u0026quot;shortcut icon\u0026quot; href=\u0026quot;/images/favicon.png\u0026quot; type=\u0026quot;image/x-icon\u0026quot; /\u0026gt;  Change default colors Hugo Learn theme let you choose between 3 native color scheme variants, but feel free to add one yourself ! Default color scheme is based on Grav Learn Theme.\nRed variant [params] # Change default color scheme with a variant one. Can be \u0026quot;red\u0026quot;, \u0026quot;blue\u0026quot;, \u0026quot;green\u0026quot;. themeVariant = \u0026quot;red\u0026quot;  Blue variant [params] # Change default color scheme with a variant one. Can be \u0026quot;red\u0026quot;, \u0026quot;blue\u0026quot;, \u0026quot;green\u0026quot;. themeVariant = \u0026quot;blue\u0026quot;  Green variant [params] # Change default color scheme with a variant one. Can be \u0026quot;red\u0026quot;, \u0026quot;blue\u0026quot;, \u0026quot;green\u0026quot;. themeVariant = \u0026quot;green\u0026quot;  \u0026lsquo;Yours‘ variant First, create a new CSS file in your local static/css folder prefixed by theme (e.g. with mine theme static/css/theme-mine.css). Copy the following content and modify colors in CSS variables.\n:root{ --MAIN-TEXT-color:#323232; /* Color of text by default */ --MAIN-TITLES-TEXT-color: #5e5e5e; /* Color of titles h2-h3-h4-h5 */ --MAIN-LINK-color:#1C90F3; /* Color of links */ --MAIN-LINK-HOVER-color:#167ad0; /* Color of hovered links */ --MAIN-ANCHOR-color: #1C90F3; /* color of anchors on titles */ --MENU-HEADER-BG-color:#1C90F3; /* Background color of menu header */ --MENU-HEADER-BORDER-color:#33a1ff; /*Color of menu header border */ --MENU-SEARCH-BG-color:#167ad0; /* Search field background color (by default borders + icons) */ --MENU-SEARCH-BOX-color: #33a1ff; /* Override search field border color */ --MENU-SEARCH-BOX-ICONS-color: #a1d2fd; /* Override search field icons color */ --MENU-SECTIONS-ACTIVE-BG-color:#20272b; /* Background color of the active section and its childs */ --MENU-SECTIONS-BG-color:#252c31; /* Background color of other sections */ --MENU-SECTIONS-LINK-color: #ccc; /* Color of links in menu */ --MENU-SECTIONS-LINK-HOVER-color: #e6e6e6; /* Color of links in menu, when hovered */ --MENU-SECTION-ACTIVE-CATEGORY-color: #777; /* Color of active category text */ --MENU-SECTION-ACTIVE-CATEGORY-BG-color: #fff; /* Color of background for the active category (only) */ --MENU-VISITED-color: #33a1ff; /* Color of 'page visited' icons in menu */ --MENU-SECTION-HR-color: #20272b; /* Color of \u0026lt;hr\u0026gt; separator in menu */ } body { color: var(--MAIN-TEXT-color) !important; } textarea:focus, input[type=\u0026quot;email\u0026quot;]:focus, input[type=\u0026quot;number\u0026quot;]:focus, input[type=\u0026quot;password\u0026quot;]:focus, input[type=\u0026quot;search\u0026quot;]:focus, input[type=\u0026quot;tel\u0026quot;]:focus, input[type=\u0026quot;text\u0026quot;]:focus, input[type=\u0026quot;url\u0026quot;]:focus, input[type=\u0026quot;color\u0026quot;]:focus, input[type=\u0026quot;date\u0026quot;]:focus, input[type=\u0026quot;datetime\u0026quot;]:focus, input[type=\u0026quot;datetime-local\u0026quot;]:focus, input[type=\u0026quot;month\u0026quot;]:focus, input[type=\u0026quot;time\u0026quot;]:focus, input[type=\u0026quot;week\u0026quot;]:focus, select[multiple=multiple]:focus { border-color: none; box-shadow: none; } h2, h3, h4, h5 { color: var(--MAIN-TITLES-TEXT-color) !important; } a { color: var(--MAIN-LINK-color); } .anchor { color: var(--MAIN-ANCHOR-color); } a:hover { color: var(--MAIN-LINK-HOVER-color); } #sidebar ul li.visited \u0026gt; a .read-icon { color: var(--MENU-VISITED-color); } #body a.highlight:after { display: block; content: \u0026quot;\u0026quot;; height: 1px; width: 0%; -webkit-transition: width 0.5s ease; -moz-transition: width 0.5s ease; -ms-transition: width 0.5s ease; transition: width 0.5s ease; background-color: var(--MAIN-LINK-HOVER-color); } #sidebar { background-color: var(--MENU-SECTIONS-BG-color); } #sidebar #header-wrapper { background: var(--MENU-HEADER-BG-color); color: var(--MENU-SEARCH-BOX-color); border-color: var(--MENU-HEADER-BORDER-color); } #sidebar .searchbox { border-color: var(--MENU-SEARCH-BOX-color); background: var(--MENU-SEARCH-BG-color); } #sidebar ul.topics \u0026gt; li.parent, #sidebar ul.topics \u0026gt; li.active { background: var(--MENU-SECTIONS-ACTIVE-BG-color); } #sidebar .searchbox * { color: var(--MENU-SEARCH-BOX-ICONS-color); } #sidebar a { color: var(--MENU-SECTIONS-LINK-color); } #sidebar a:hover { color: var(--MENU-SECTIONS-LINK-HOVER-color); } #sidebar ul li.active \u0026gt; a { background: var(--MENU-SECTION-ACTIVE-CATEGORY-BG-color); color: var(--MENU-SECTION-ACTIVE-CATEGORY-color) !important; } #sidebar hr { border-color: var(--MENU-SECTION-HR-color); }  Then, set the themeVariant value with the name of your custom theme file. That\u0026rsquo;s it !\n[params] # Change default color scheme with a variant one. Can be \u0026quot;red\u0026quot;, \u0026quot;blue\u0026quot;, \u0026quot;green\u0026quot;. themeVariant = \u0026quot;mine\u0026quot;  "
},
{
	"uri": "https://baram204.github.io/AndroidStudy/themedoc/cont/i18n/",
	"title": "Multilingual and i18n",
	"tags": [],
	"description": "",
	"content": " Learn theme is fully compatible with Hugo multilingual mode.\nIt provides:\n Translation strings for default values (English and French). Feel free to contribute ! Automatic menu generation from multilingual content In-browser language switching  Basic configuration After learning how Hugo handle multilingual websites, define your languages in your config.toml file.\nFor example with current French and English website.\n# English is the default language defaultContentLanguage = \u0026quot;en\u0026quot; # Force to have /en/my-page and /fr/my-page routes, even for default language. defaultContentLanguageInSubdir= true [Languages] [Languages.en] title = \u0026quot;Documentation for Hugo Learn Theme\u0026quot; weight = 1 languageName = \u0026quot;English\u0026quot; [Languages.fr] title = \u0026quot;Documentation du thème Hugo Learn\u0026quot; weight = 2 languageName = \u0026quot;Français\u0026quot;  Then, for each new page, append the id of the language to the file.\n Single file my-page.md is split in two files:  in English: my-page.en.md in French: my-page.fr.md  Single file _index.md is split in two files:  in English: _index.en.md in French: _index.fr.md   Be aware that only translated pages are displayed in menu. It\u0026rsquo;s not replaced with default language content.\n\rUse slug Front Matter parameter to translate urls too.\n\rOverwrite translation strings Translations strings are used for common default values used in the theme (Edit this page button, Search placeholder and so on). Translations are available in french and english but you may use another language or want to override default values.\nTo override these values, create a new file in your local i18n folder i18n/\u0026lt;idlanguage\u0026gt;.toml and inspire yourself from the theme themes/hugo-theme-learn/i18n/en.toml\nBy the way, as these translations could be used by other people, please take the time to propose a translation by making a PR to the theme !\nDisable language switching Switching the language in the browser is a great feature, but for some reasons you may want to disable it.\nJust set disableLanguageSwitchingButton=true in your config.toml\n[params] # When using mulitlingual website, disable the switch language button. disableLanguageSwitchingButton = true  "
},
{
	"uri": "https://baram204.github.io/AndroidStudy/themedoc/shortcodes/children/test/",
	"title": "",
	"tags": [],
	"description": "",
	"content": "+++ title = \u0026ldquo;page test\u0026rdquo; description = \u0026ldquo;This is a page test\u0026rdquo; +++\nThis is a test demo child page\n"
},
{
	"uri": "https://baram204.github.io/AndroidStudy/themedoc/shortcodes/attachments/",
	"title": "Attachments",
	"tags": [],
	"description": "The Attachments shortcode displays a list of files attached to a page.",
	"content": " The Attachments shortcode displays a list of files attached to a page.\n\r\rAttachments\r\r\rBachGavotteShort.mp3\r\r(357 ko)\r\r\rCarroll_AliceAuPaysDesMerveilles.pdf\r\r(175 ko)\r\r\radivorciarsetoca00cape.pdf\r\r(361 ko)\r\r\rhugo.png\r\r(17 ko)\r\r\rmovieselectricsheep-flock-244-32500-2.mp4\r\r(340 ko)\r\r\r\rUsage The shortcurt lists files found in a specific folder. Currently, it support two implementations for pages\n If your page is a markdown file, attachements must be place in a folder named like your page and ending with .files.\n  content  _index.md page.files  attachment.pdf  page.md    If your page is a folder, attachements must be place in a nested \u0026lsquo;files\u0026rsquo; folder.\n  content  _index.md page  index.md files  attachment.pdf       Be aware that if you use a multilingual website, you will need to have as many folders as languages.\nThat\u0026rsquo;s all !\nParameters    Parameter Default Description     title \u0026ldquo;Attachments\u0026rdquo; List\u0026rsquo;s title   style \u0026rdquo;\u0026rdquo; Choose between \u0026ldquo;orange\u0026rdquo;, \u0026ldquo;grey\u0026rdquo;, \u0026ldquo;blue\u0026rdquo; and \u0026ldquo;green\u0026rdquo; for nice style   pattern \u0026rdquo;.*\u0026rdquo; A regular expressions, used to filter the attachments by file name. The pattern parameter value must be regular expressions.    For example:\n To match a file suffix of \u0026lsquo;jpg\u0026rsquo;, use .*jpg (not *.jpg). To match file names ending in \u0026lsquo;jpg\u0026rsquo; or \u0026lsquo;png\u0026rsquo;, use .*(jpg|png)  Examples List of attachments ending in pdf or mp4 {{%attachments title=\u0026quot;Related files\u0026quot; pattern=\u0026quot;.*(pdf|mp4)\u0026quot;/%}}  renders as\n\r\rRelated files\r\r\rCarroll_AliceAuPaysDesMerveilles.pdf\r\r(175 ko)\r\r\radivorciarsetoca00cape.pdf\r\r(361 ko)\r\r\rmovieselectricsheep-flock-244-32500-2.mp4\r\r(340 ko)\r\r\r\rColored styled box {{%attachments style=\u0026quot;orange\u0026quot; /%}}  renders as\n\r\rAttachments\r\r\rBachGavotteShort.mp3\r\r(357 ko)\r\r\rCarroll_AliceAuPaysDesMerveilles.pdf\r\r(175 ko)\r\r\radivorciarsetoca00cape.pdf\r\r(361 ko)\r\r\rhugo.png\r\r(17 ko)\r\r\rmovieselectricsheep-flock-244-32500-2.mp4\r\r(340 ko)\r\r\r\r{{%attachments style=\u0026quot;grey\u0026quot; /%}}  renders as\n\r\rAttachments\r\r\rBachGavotteShort.mp3\r\r(357 ko)\r\r\rCarroll_AliceAuPaysDesMerveilles.pdf\r\r(175 ko)\r\r\radivorciarsetoca00cape.pdf\r\r(361 ko)\r\r\rhugo.png\r\r(17 ko)\r\r\rmovieselectricsheep-flock-244-32500-2.mp4\r\r(340 ko)\r\r\r\r{{%attachments style=\u0026quot;blue\u0026quot; /%}}  renders as\n\r\rAttachments\r\r\rBachGavotteShort.mp3\r\r(357 ko)\r\r\rCarroll_AliceAuPaysDesMerveilles.pdf\r\r(175 ko)\r\r\radivorciarsetoca00cape.pdf\r\r(361 ko)\r\r\rhugo.png\r\r(17 ko)\r\r\rmovieselectricsheep-flock-244-32500-2.mp4\r\r(340 ko)\r\r\r\r{{%attachments style=\u0026quot;green\u0026quot; /%}}  renders as\n\r\rAttachments\r\r\rBachGavotteShort.mp3\r\r(357 ko)\r\r\rCarroll_AliceAuPaysDesMerveilles.pdf\r\r(175 ko)\r\r\radivorciarsetoca00cape.pdf\r\r(361 ko)\r\r\rhugo.png\r\r(17 ko)\r\r\rmovieselectricsheep-flock-244-32500-2.mp4\r\r(340 ko)\r\r\r\r"
},
{
	"uri": "https://baram204.github.io/AndroidStudy/themedoc/shortcodes/button/",
	"title": "Button",
	"tags": [],
	"description": "Nice buttons on your page.",
	"content": "A button is a just a clickable button with optional icon.\n{{% button href=\u0026quot;https://getgrav.org/\u0026quot; %}}Get Grav{{% /button %}} {{% button href=\u0026quot;https://getgrav.org/\u0026quot; icon=\u0026quot;fa fa-download\u0026quot; %}}Get Grav with icon{{% /button %}} {{% button href=\u0026quot;https://getgrav.org/\u0026quot; icon=\u0026quot;fa fa-download\u0026quot; icon-position=\u0026quot;right\u0026quot; %}}Get Grav with icon right{{% /button %}}  Get Grav\r\r\rGet Grav with icon\r\rGet Grav with icon right\r\r\r"
},
{
	"uri": "https://baram204.github.io/AndroidStudy/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://baram204.github.io/AndroidStudy/themedoc/shortcodes/children/",
	"title": "Children",
	"tags": [],
	"description": "List the child pages of a page",
	"content": " Use the children shortcode to list the child pages of a page and the further descendants (children\u0026rsquo;s children). By default, the shortcode displays links to the child pages.\nUsage    Parameter Default Description     page current Specify the page name (section name) to display children for   style \u0026ldquo;li\u0026rdquo; Choose the style used to display descendants. It could be any HTML tag name   showhidden \u0026ldquo;false\u0026rdquo; When true, child pages hidden from the menu will be displayed   description \u0026ldquo;false\u0026rdquo; Allows you to include a short text under each page in the list.when no description exists for the page, children shortcode takes the first 70 words of your content. read more info about summaries on gohugo.io   depth 1 Enter a number to specify the depth of descendants to display. For example, if the value is 2, the shortcode will display 2 levels of child pages.  Tips: set 999 to get all descendants   sort none Sort Children By\nWeight - to sort on menu orderName - to sort alphabetically on menu labelIdentifier - to sort alphabetically on identifier set in frontmatterURL - URL    Demo {{% children %}}  \r\r\r\rpage 1\r\r\rpage 2\r\r\rpage 3\r\r\r{{% children description=\u0026quot;true\u0026quot; %}}     +++ title = \u0026ldquo;page test\u0026rdquo; description = \u0026ldquo;This is a page test\u0026rdquo; +++ This is a test demo child page\n page 1  This is a demo child page\n page 2  Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n page 3  This is a demo child page\n {{% children depth=\u0026quot;3\u0026quot; showhidden=\u0026quot;true\u0026quot; %}}        page 1 \n   page 2 \n   page 3 \n   page 4 \n  \n{{% children style=\u0026quot;h2\u0026quot; depth=\u0026quot;3\u0026quot; description=\u0026quot;true\u0026quot; %}}     +++ title = \u0026ldquo;page test\u0026rdquo; description = \u0026ldquo;This is a page test\u0026rdquo; +++ This is a test demo child page\n page 1  This is a demo child page\n page 2  \n page 3  This is a demo child page\n {{% children style=\u0026quot;div\u0026quot; depth=\u0026quot;999\u0026quot; %}}      page 1   page 2   page 3   "
},
{
	"uri": "https://baram204.github.io/AndroidStudy/themedoc/shortcodes/expand/",
	"title": "Expand",
	"tags": [],
	"description": "Displays an expandable/collapsible section of text on your page",
	"content": " The Expand shortcode displays an expandable/collapsible section of text on your page. Here is an example\n\r\rExpand me...\r\r\rLorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n\r Usage this shortcode takes exactly one optional parameter to define the text that appears next to the expand/collapse icon. (default is \u0026ldquo;Expand me\u0026hellip;\u0026rdquo;)\n{{%expand \u0026quot;Is this learn theme rocks ?\u0026quot; %}}Yes !.{{% /expand%}}  \r\rIs this learn theme rocks ?\r\r\rYes !\r\r\nDemo {{%expand%}} Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. {{% /expand%}}  \r\rExpand me...\r\r\rLorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n\r\n"
},
{
	"uri": "https://baram204.github.io/AndroidStudy/themedoc/shortcodes/mermaid/",
	"title": "Mermaid",
	"tags": [],
	"description": "Generation of diagram and flowchart from text in a similar manner as markdown",
	"content": " Mermaid is a library helping you to generate diagram and flowcharts from text, in a similar manner as Markdown.\nJust insert your mermaid code in the mermaid shortcode and that\u0026rsquo;s it.\nFlowchart example {{\u0026lt;mermaid align=\u0026quot;left\u0026quot;\u0026gt;}} graph LR; A[Hard edge] --\u0026gt;|Link text| B(Round edge) B --\u0026gt; C{Decision} C --\u0026gt;|One| D[Result one] C --\u0026gt;|Two| E[Result two] {{\u0026lt; /mermaid \u0026gt;}}  renders as\ngraph LR;\rA[Hard edge] --|Link text| B(Round edge)\rB -- C{Decision}\rC --|One| D[Result one]\rC --|Two| E[Result two]\r\rSequence example {{\u0026lt;mermaid\u0026gt;}} sequenceDiagram participant Alice participant Bob Alice-\u0026gt;\u0026gt;John: Hello John, how are you? loop Healthcheck John-\u0026gt;John: Fight against hypochondria end Note right of John: Rational thoughts \u0026lt;br/\u0026gt;prevail... John--\u0026gt;Alice: Great! John-\u0026gt;Bob: How about you? Bob--\u0026gt;John: Jolly good! {{\u0026lt; /mermaid \u0026gt;}}  renders as\nsequenceDiagram\rparticipant Alice\rparticipant Bob\rAlice-John: Hello John, how are you?\rloop Healthcheck\rJohn-John: Fight against hypochondria\rend\rNote right of John: Rational thoughts prevail...\rJohn--Alice: Great!\rJohn-Bob: How about you?\rBob--John: Jolly good!\r\rGANTT Example {{\u0026lt;mermaid\u0026gt;}} gantt dateFormat YYYY-MM-DD title Adding GANTT diagram functionality to mermaid section A section Completed task :done, des1, 2014-01-06,2014-01-08 Active task :active, des2, 2014-01-09, 3d Future task : des3, after des2, 5d Future task2 : des4, after des3, 5d section Critical tasks Completed task in the critical line :crit, done, 2014-01-06,24h Implement parser and jison :crit, done, after des1, 2d Create tests for parser :crit, active, 3d Future task in critical line :crit, 5d Create tests for renderer :2d Add to mermaid :1d {{\u0026lt; /mermaid \u0026gt;}}  render as\ngantt\rdateFormat YYYY-MM-DD\rtitle Adding GANTT diagram functionality to mermaid\rsection A section\rCompleted task :done, des1, 2014-01-06,2014-01-08\rActive task :active, des2, 2014-01-09, 3d\rFuture task : des3, after des2, 5d\rFuture task2 : des4, after des3, 5d\rsection Critical tasks\rCompleted task in the critical line :crit, done, 2014-01-06,24h\rImplement parser and jison :crit, done, after des1, 2d\rCreate tests for parser :crit, active, 3d\rFuture task in critical line :crit, 5d\rCreate tests for renderer :2d\rAdd to mermaid :1d\r\r"
},
{
	"uri": "https://baram204.github.io/AndroidStudy/themedoc/shortcodes/notice/",
	"title": "Notice",
	"tags": [],
	"description": "Disclaimers to help you structure your page",
	"content": " The notice shortcode shows 4 types of disclaimers to help you structure your page.\nNote {{% notice note %}} A notice disclaimer {{% /notice %}}  renders as\nA notice disclaimer\n\rInfo {{% notice info %}} An information disclaimer {{% /notice %}}  renders as\nAn information disclaimer\n\rTip {{% notice tip %}} A tip disclaimer {{% /notice %}}  renders as\nA tip disclaimer\n\rWarning {{% notice warning %}} An warning disclaimer {{% /notice %}}  renders as\nA warning disclaimer\n\r"
},
{
	"uri": "https://baram204.github.io/AndroidStudy/themedoc/shortcodes/siteparam/",
	"title": "Site param",
	"tags": [],
	"description": "Get value of site params variables in your page.",
	"content": "siteparam shortcode is used to help you print values of site params.\nFor instance, in this current site, the editURL variable is used in config.toml\n[params] editURL = \u0026quot;https://github.com/matcornic/hugo-theme-learn/edit/master/exampleSite/content/\u0026quot;  Use the siteparam shortcode to display its value.\n`editURL` Value : {{% siteparam \u0026quot;editURL\u0026quot; %}}  is displayed as\neditURL Value : https://github.com/baram204/AndroidStudy/edit/source/content/\n"
},
{
	"uri": "https://baram204.github.io/AndroidStudy/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://baram204.github.io/AndroidStudy/themedoc/shortcodes/children/children-1/",
	"title": "page 1",
	"tags": [],
	"description": "This is a demo child page",
	"content": "This is a demo child page\n"
},
{
	"uri": "https://baram204.github.io/AndroidStudy/themedoc/shortcodes/children/children-1/children-1-1/",
	"title": "page 1-1",
	"tags": [],
	"description": "This is a demo child page",
	"content": "This is a demo child page\n"
},
{
	"uri": "https://baram204.github.io/AndroidStudy/themedoc/shortcodes/children/children-1/children-1-1/children-1-1-1/",
	"title": "page 1-1-1",
	"tags": [],
	"description": "This is a demo child page",
	"content": "This is a demo child page\n"
},
{
	"uri": "https://baram204.github.io/AndroidStudy/themedoc/shortcodes/children/children-1/children-1-1/children-1-1-1/children-1-1-1-1/",
	"title": "page 1-1-1-1",
	"tags": [],
	"description": "This is a demo child page",
	"content": "This is a demo child page\n"
},
{
	"uri": "https://baram204.github.io/AndroidStudy/themedoc/shortcodes/children/children-1/children-1-1/children-1-1-1/children-1-1-1-1/children-1-1-1-1-1/",
	"title": "page 1-1-1-1-1",
	"tags": [],
	"description": "This is a demo child page",
	"content": "This is a demo child page\n"
},
{
	"uri": "https://baram204.github.io/AndroidStudy/themedoc/shortcodes/children/children-2/",
	"title": "page 2",
	"tags": [],
	"description": "",
	"content": "Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n"
},
{
	"uri": "https://baram204.github.io/AndroidStudy/themedoc/shortcodes/children/children-3/",
	"title": "page 3",
	"tags": [],
	"description": "This is a demo child page",
	"content": "This is a demo child page, not displayed in the menu\n"
},
{
	"uri": "https://baram204.github.io/AndroidStudy/themedoc/shortcodes/children/children-4/",
	"title": "page 4",
	"tags": [],
	"description": "This is a demo child page",
	"content": "This is a demo child page, not displayed in the menu\n"
},
{
	"uri": "https://baram204.github.io/AndroidStudy/themedoc/shortcodes/children/children-2/test3/",
	"title": "page test 3",
	"tags": [],
	"description": "This is a page test",
	"content": "This is a test 3 demo child page\n"
},
{
	"uri": "https://baram204.github.io/AndroidStudy/credits/",
	"title": "명단",
	"tags": [],
	"description": "",
	"content": " 기여자 Thanks to them  for making Open Source Software a better place !\n.ghContributors{\rdisplay:flex;\rflex-flow: wrap;\ralign-content: flex-start\r}\r.ghContributors  div{\rwidth: 50% ;\rdisplay: inline-flex;\rmargin-bottom: 5px;\r}\r.ghContributors  div label{\rpadding-left: 4px ;\r}\r.ghContributors  div span{\rfont-size: x-small;\rpadding-left: 4px ;\r}\r\r\r@baram204\r6 commits\r\r 패키지와 라이브러리  mermaid - generation of diagram and flowchart from text in a similar manner as markdown font awesome - the iconic font and CSS framework jQuery - The Write Less, Do More, JavaScript Library lunr - Lunr enables you to provide a great search experience without the need for external, server-side, search services\u0026hellip; horsey - Progressive and customizable autocomplete component clipboard.js - copy text to clipboard highlight.js - Javascript syntax highlighter modernizr - A JavaScript toolkit that allows web developers to use new CSS3 and HTML5 features while maintaining a fine level of control over browsers that don\u0026rsquo;t support  도구  Netlify - Continuous deployement and hosting of this documentation Hugo  "
},
{
	"uri": "https://baram204.github.io/AndroidStudy/showcase/",
	"title": "쇼케이스",
	"tags": [],
	"description": "",
	"content": " TAT by OVH "
},
{
	"uri": "https://baram204.github.io/AndroidStudy/",
	"title": "안드로이드 7일 공부",
	"tags": [],
	"description": "",
	"content": " 안드로이드 7일 공부 안드로이드를 모르는 스타트업 사장님을 위한 속성 강좌용 웹사이트. 아이엠포트 연동 정도만 목표로 하고 있습니다.\n현재 작성자가 안드로이드를 공부 중입니다.\n\rgantt\rdateFormat YYYY-MM-DD\rtitle 진도표\rsection 개발자 공부 현황\r안드 개요 :done, des1, 2018-03-31,1d\r헬로월드 :done, des2, 2018-04-01, 1d\r뷰와레이아웃 :done, des3, 2018-04-02, 1d\r고급위젯 :done, des4, after des3, 1d\r인텐트 :crit, done, des5, after des4, 1d\r웹뷰 :crit, active, des6, after des5, 1d\r네트워크 : des7, after des6, 1d\r\r주요 주제  안드 액티비티 - 뷰 기본 인텐트 - 자료를 담아서 호출되는 뷰에 보내기 웹브라우저 - 내부 웹브라우저에서 호출 아이엠포트 결제(브라우저 사용) Automatic Search  info\n\r팁\n\rnote\n\r"
}]